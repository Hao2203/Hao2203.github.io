---
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";
import Header from "@components/Header.astro";
import type { Post } from "./index.astro";

interface Path {
    params: {
        tag: string;
    };
    props: {
        posts: Post[];
    };
}
export async function getStaticPaths(): Promise<Path[]> {
    const allPosts = (await Astro.glob("../posts/*.md")) as Post[];
    const uniqueTags = [
        ...new Set(allPosts.map((post) => post.frontmatter.tags || []).flat()),
    ];
    const res = uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post) =>
            post.frontmatter.tags?.includes(tag)
        );
        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
    });
    return res;
}
interface Props {
    posts: any[];
}
const { tag } = Astro.params;
const { posts } = Astro.props;
const filteredPosts = posts.filter((post) =>
    post.frontmatter.tags?.includes(tag)
);
---

<BaseLayout pageTitle={tag}>
    <Header />
    <p>Posts tagged with {tag}</p>
    {(<BlogPost posts={filteredPosts} />)}
</BaseLayout>
